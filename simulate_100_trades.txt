import requests
import random
import time
from datetime import datetime, timedelta

URL = "https://jarvis-quant-sys.onrender.com/webhook"
AI_TRIGGER_URL = "https://jarvis-quant-sys.onrender.com/trigger-ai"

def generate_random_trade():
    entry = round(random.uniform(1.1000, 1.2000), 4)
    stop_loss = round(entry - random.uniform(0.0020, 0.0050), 4)
    take_profit = round(entry + (entry - stop_loss) * 2, 4)  # 2:1 reward:risk
    confidence = round(random.uniform(0.6, 0.9), 2)

    return {
        "pair": "GBPUSD",
        "action": random.choice(["buy", "sell"]),
        "entry": entry,
        "stop_loss": stop_loss,
        "take_profit": take_profit,
        "confidence": confidence,
        "strategy": "MACD+EMA",
        "timestamp": (datetime.utcnow() + timedelta(seconds=random.randint(1, 10000))).isoformat()
    }

def send_test_trades(n=100):
    for i in range(n):
        trade = generate_random_trade()
        try:
            response = requests.post(URL, json=trade)
            print(f"Trade {i+1}: {response.status_code} - {response.text}")
        except Exception as e:
            print(f"Error sending trade {i+1}: {e}")
        time.sleep(0.1)

if __name__ == "__main__":
    send_test_trades()

    # âœ… Trigger AI Learning after test trades
    print("\nðŸ¤– Triggering AI Training...")
    try:
        ai_response = requests.get(AI_TRIGGER_URL)
        print(f"AI Training Triggered: {ai_response.status_code} - {ai_response.text}")
    except Exception as e:
        print(f"Error triggering AI: {e}")
