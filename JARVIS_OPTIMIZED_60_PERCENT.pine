//@version=6
strategy("JARVIS OPTIMIZED - QUALITY OVER QUANTITY",
         shorttitle="JARVIS_OPT",
         overlay=true,
         default_qty_type=strategy.percent_of_equity,
         default_qty_value=1.5,
         currency=currency.USD,
         initial_capital=25,
         commission_type=strategy.commission.percent,
         commission_value=0.1,
         slippage=2)

// Target: 3-4 Quality Trades/Day | 60-65% Win Rate | 2.5:1 Risk-Reward | 4.0% Risk Per Trade
// Based on: Enhanced EMA System + Premium Sessions + Better Confirmation
// Compatible with: Advanced ML Backend & Risk Management System

// Define input groups
g_general = "General Settings"
g_strategy = "Strategy Parameters"
g_sessions = "Session Settings"

// Input Parameters - OPTIMIZED FOR QUALITY
webhook_url = input.string("https://jarvis-quant-sys.onrender.com/webhook", "Webhook URL", group=g_general)
risk_percent = input.float(4.0, "Risk Per Trade (%)", minval=1.0, maxval=5.0, step=0.1, group=g_general)
risk_reward_ratio = input.float(2.5, "Risk:Reward Ratio", minval=2.0, maxval=3.5, step=0.1, group=g_general)

// Create table variable
var t = table.new(position.top_right, 2, 5, bgcolor=color.white, border_width=1)

// Rest of your strategy code here...

// Update table on last bar
if barstate.islast
    win_rate = strategy.closedtrades > 0 ? (strategy.wintrades / strategy.closedtrades) * 100 : 0.0
    table.cell(t, 0, 0, "JARVIS OPTIMIZED", text_color=color.black, text_size=size.small)
    table.cell(t, 1, 0, "VALUE", text_color=color.black, text_size=size.small)
    table.cell(t, 0, 1, "Total Trades", text_color=color.black)
    table.cell(t, 1, 1, str.tostring(strategy.closedtrades), text_color=color.black)
    table.cell(t, 0, 2, "Win Rate", text_color=color.black)
    table.cell(t, 1, 2, str.tostring(win_rate, "#.#") + "%", text_color=win_rate >= 60 ? color.green : color.red)
    table.cell(t, 0, 3, "Net Profit", text_color=color.black)
    table.cell(t, 1, 3, str.tostring(strategy.netprofit, "#.##"), text_color=strategy.netprofit > 0 ? color.green : color.red)
    table.cell(t, 0, 4, "Risk/Trade", text_color=color.black)
    table.cell(t, 1, 4, str.tostring(risk_percent, "#.#") + "%", text_color=color.black)
