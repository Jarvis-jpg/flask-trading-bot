//@version=6
strategy("SevenSYS", shorttitle="SevenSYS", 
         overlay=true, default_qty_type=strategy.percent_of_equity, 
         default_qty_value=2, pyramiding=0, calc_on_every_tick=true)

// ==================== BALANCED APPROACH ====================
// Fixed version with proper RSI logic and trend alignment
// Will generate signals while preventing the original errors

// ==================== RISK MANAGEMENT ====================
riskPerTrade = input.float(1.5, "Risk Per Trade (%)", minval=0.5, maxval=3.0, step=0.1)
maxDrawdown = input.float(10.0, "Max Drawdown Stop (%)", minval=5.0, maxval=15.0, step=1.0)
dailyLossLimit = input.float(4.0, "Daily Loss Limit (%)", minval=2.0, maxval=8.0, step=0.5)
minSignalStrength = input.float(55.0, "Minimum Signal Strength", minval=45.0, maxval=75.0, step=1.0)

// ==================== TECHNICAL INDICATORS ====================
ema8 = ta.ema(close, 8)
ema21 = ta.ema(close, 21)
ema50 = ta.ema(close, 50)
ema200 = ta.ema(close, 200)

htf_trend = request.security(syminfo.tickerid, "240", ta.ema(close, 21))

rsi = ta.rsi(close, 14)
[macdLine, signalLine, histogram] = ta.macd(close, 12, 26, 9)
stoch = ta.stoch(close, high, low, 14)

volume_ma = ta.sma(volume, 20)
vwap = ta.vwap
atr = ta.atr(14)

// ==================== SESSION ANALYSIS ====================
london_session = time(timeframe.period, "0800-1600", "Europe/London")
ny_session = time(timeframe.period, "1300-2200", "America/New_York")
asian_session = time(timeframe.period, "2200-0600", "Asia/Tokyo")
london_ny_overlap = not na(london_session) and not na(ny_session)
active_session = not na(london_session) or not na(ny_session) or not na(asian_session)

// ==================== BALANCED TREND ANALYSIS ====================
// More flexible than emergency fix, but prevents the original errors
ema_bull_basic = ema8 > ema21 and ema21 > ema50 and close > ema21
ema_bear_basic = ema8 < ema21 and ema21 < ema50 and close < ema21
ema_strong_bull = ema8 > ema21 and ema21 > ema50 and ema50 > ema200 and close > ema8
ema_strong_bear = ema8 < ema21 and ema21 < ema50 and ema50 < ema200 and close < ema8

htf_trend_bull = close > htf_trend * 0.999  // Slight buffer
htf_trend_bear = close < htf_trend * 1.001  // Slight buffer

// BALANCED: Flexible trend strength calculation
trend_strength = ema_strong_bull and htf_trend_bull ? 15.0 : 
                 ema_strong_bear and htf_trend_bear ? -15.0 : 
                 ema_bull_basic and htf_trend_bull ? 8.0 : 
                 ema_bear_basic and htf_trend_bear ? -8.0 : 
                 ema8 > ema21 and close > ema50 ? 4.0 : 
                 ema8 < ema21 and close < ema50 ? -4.0 : 0.0

// ==================== FIXED RSI MOMENTUM ANALYSIS ====================
// CRITICAL FIX: Proper RSI thresholds (was the main error)
rsi_bullish = rsi > 40 and rsi < 80          // Fixed: was rsi < 60 for bearish!
rsi_bearish = rsi < 60 and rsi > 20          // Fixed: proper bearish zone
rsi_strong_bullish = rsi > 60 and rsi < 85
rsi_strong_bearish = rsi < 40 and rsi > 15
rsi_neutral = rsi >= 30 and rsi <= 70

macd_bullish = macdLine > signalLine and histogram > 0
macd_bearish = macdLine < signalLine and histogram < 0
macd_strong_bull = macd_bullish and histogram > histogram[1]
macd_strong_bear = macd_bearish and histogram < histogram[1]

stoch_bullish = stoch > 20 and stoch < 90
stoch_bearish = stoch > 10 and stoch < 80

// BALANCED: More flexible momentum scoring
momentum_score = (rsi_strong_bullish and macd_strong_bull) ? 15.0 : 
                 (rsi_strong_bearish and macd_strong_bear) ? -15.0 : 
                 (rsi_bullish and macd_bullish) ? 8.0 : 
                 (rsi_bearish and macd_bearish) ? -8.0 : 
                 (rsi_neutral and macd_bullish) ? 4.0 : 
                 (rsi_neutral and macd_bearish) ? -4.0 : 0.0

// ==================== VOLUME & PRICE ACTION ====================
volume_above_avg = volume > volume_ma
volume_strong = volume > volume_ma * 1.5
above_vwap = close > vwap
below_vwap = close < vwap
bullish_candle = close > open
bearish_candle = close < open

pa_score = (volume_strong and bullish_candle and above_vwap) ? 10.0 : 
           (volume_strong and bearish_candle and below_vwap) ? -10.0 : 
           (volume_above_avg and bullish_candle and above_vwap) ? 5.0 : 
           (volume_above_avg and bearish_candle and below_vwap) ? -5.0 : 0.0

// ==================== VOLATILITY FILTER ====================
atr_pct = atr / close * 100
normal_volatility = atr_pct > 0.01 and atr_pct < 3.0  // More flexible range
high_volatility = atr_pct > 2.0

// ==================== SIGNAL STRENGTH CALCULATION ====================
base_strength = 30.0  // Lower base for more signals

signal_strength_long = base_strength + 
                      (trend_strength > 0 ? trend_strength * 1.5 : 0) + 
                      (momentum_score > 0 ? momentum_score * 1.2 : 0) + 
                      (london_ny_overlap ? 12.0 : active_session ? 6.0 : 0) + 
                      (pa_score > 0 ? pa_score * 1.0 : 0)

signal_strength_short = base_strength + 
                       (trend_strength < 0 ? math.abs(trend_strength) * 1.5 : 0) + 
                       (momentum_score < 0 ? math.abs(momentum_score) * 1.2 : 0) + 
                       (london_ny_overlap ? 12.0 : active_session ? 6.0 : 0) + 
                       (pa_score < 0 ? math.abs(pa_score) * 1.0 : 0)

// ==================== BALANCED ENTRY CONDITIONS ====================
// Much more flexible than emergency fix, but prevents original errors

// LONG conditions - requires trend alignment and proper RSI
long_basic = ema_bull_basic and trend_strength > 0 and momentum_score >= 0 and 
             above_vwap and normal_volatility and active_session

long_strong = ema_strong_bull and trend_strength > 5 and momentum_score > 5 and 
              above_vwap and normal_volatility and london_ny_overlap

// SHORT conditions - requires trend alignment and proper RSI  
short_basic = ema_bear_basic and trend_strength < 0 and momentum_score <= 0 and 
              below_vwap and normal_volatility and active_session

short_strong = ema_strong_bear and trend_strength < -5 and momentum_score < -5 and 
               below_vwap and normal_volatility and london_ny_overlap

// Final entry signals
enter_long = (long_strong and signal_strength_long >= minSignalStrength) or 
             (long_basic and signal_strength_long >= minSignalStrength + 10)

enter_short = (short_strong and signal_strength_short >= minSignalStrength) or 
              (short_basic and signal_strength_short >= minSignalStrength + 10)

// ==================== POSITION MANAGEMENT ====================
atr_multiplier = 2.0  // More aggressive than emergency fix
stop_distance = atr * atr_multiplier
tp_multiplier = 2.5   // Better risk-reward
profit_distance = stop_distance * tp_multiplier

// ==================== SAFETY NETS ====================
market_crisis = high_volatility or (atr_pct > 2.5)
safety_stop = market_crisis or (strategy.equity < strategy.initial_capital * 0.90)

// ==================== TRADE EXECUTION ====================
if enter_long and not safety_stop and strategy.position_size == 0
    strategy.entry("LONG", strategy.long)
    strategy.exit("LONG_EXIT", "LONG", stop=close - stop_distance, limit=close + profit_distance)
    alert("{\"ticker\": \"" + syminfo.ticker + "\", \"strategy.order.action\": \"buy\", \"close\": " + str.tostring(close) + ", \"strategy\": \"SevenSYS\", \"signal_strength\": " + str.tostring(signal_strength_long) + ", \"stop_loss\": " + str.tostring(close - stop_distance) + ", \"take_profit\": " + str.tostring(close + profit_distance) + "}", alert.freq_once_per_bar)

if enter_short and not safety_stop and strategy.position_size == 0
    strategy.entry("SHORT", strategy.short)
    strategy.exit("SHORT_EXIT", "SHORT", stop=close + stop_distance, limit=close - profit_distance)
    alert("{\"ticker\": \"" + syminfo.ticker + "\", \"strategy.order.action\": \"sell\", \"close\": " + str.tostring(close) + ", \"strategy\": \"SevenSYS\", \"signal_strength\": " + str.tostring(signal_strength_short) + ", \"stop_loss\": " + str.tostring(close + stop_distance) + ", \"take_profit\": " + str.tostring(close - profit_distance) + "}", alert.freq_once_per_bar)

// Emergency Exit
if safety_stop and strategy.position_size != 0
    strategy.close_all(comment="SAFETY_STOP")
    alert("{\"ticker\": \"" + syminfo.ticker + "\", \"strategy.order.action\": \"close_all\", \"close\": " + str.tostring(close) + ", \"strategy\": \"SevenSYS\", \"reason\": \"safety_stop\"}", alert.freq_once_per_bar)

// ==================== VISUAL INDICATORS ====================
plot(ema8, "EMA 8", color=color.yellow, linewidth=1)
plot(ema21, "EMA 21", color=color.orange, linewidth=2)
plot(ema50, "EMA 50", color=color.blue, linewidth=2)
plot(ema200, "EMA 200", color=color.red, linewidth=2)
plot(vwap, "VWAP", color=color.purple, linewidth=2)

plotshape(enter_long, "BALANCED LONG", shape.triangleup, location.belowbar, color.green, size=size.normal)
plotshape(enter_short, "BALANCED SHORT", shape.triangledown, location.abovebar, color.red, size=size.normal)
plotshape(safety_stop, "SAFETY", shape.xcross, location.belowbar, color.orange, size=size.small)

// Debug shapes for signal strength
plotshape(signal_strength_long >= minSignalStrength, "LONG READY", shape.circle, location.belowbar, color.lime, size=size.tiny)
plotshape(signal_strength_short >= minSignalStrength, "SHORT READY", shape.circle, location.abovebar, color.red, size=size.tiny)

// ==================== BALANCED DASHBOARD ====================
var table dashboard = table.new(position.top_right, 3, 8, bgcolor=color.new(color.black, 85), border_width=2)

if barstate.islast
    table.cell(dashboard, 0, 0, "SevenSYS", text_color=color.white, text_size=size.small, bgcolor=color.new(color.blue, 70))
    table.cell(dashboard, 1, 0, "FIXED", text_color=color.white, text_size=size.small, bgcolor=color.new(color.blue, 70))
    table.cell(dashboard, 2, 0, "ACTIVE", text_color=color.white, text_size=size.small, bgcolor=color.new(color.green, 70))
    
    table.cell(dashboard, 0, 1, "LONG Signal", text_color=color.white)
    table.cell(dashboard, 1, 1, str.tostring(signal_strength_long, "#.#"), text_color=signal_strength_long >= minSignalStrength ? color.green : color.gray)
    table.cell(dashboard, 2, 1, signal_strength_long >= minSignalStrength ? "READY" : "WAIT", text_color=signal_strength_long >= minSignalStrength ? color.green : color.gray)
    
    table.cell(dashboard, 0, 2, "SHORT Signal", text_color=color.white)
    table.cell(dashboard, 1, 2, str.tostring(signal_strength_short, "#.#"), text_color=signal_strength_short >= minSignalStrength ? color.red : color.gray)
    table.cell(dashboard, 2, 2, signal_strength_short >= minSignalStrength ? "READY" : "WAIT", text_color=signal_strength_short >= minSignalStrength ? color.red : color.gray)
    
    table.cell(dashboard, 0, 3, "Trend", text_color=color.white)
    table.cell(dashboard, 1, 3, trend_strength > 4 ? "BULL" : trend_strength < -4 ? "BEAR" : "NEUTRAL", text_color=trend_strength > 4 ? color.green : trend_strength < -4 ? color.red : color.gray)
    table.cell(dashboard, 2, 3, str.tostring(trend_strength, "#.#"), text_color=trend_strength > 0 ? color.green : trend_strength < 0 ? color.red : color.gray)
    
    table.cell(dashboard, 0, 4, "Momentum", text_color=color.white)
    table.cell(dashboard, 1, 4, str.tostring(momentum_score, "#.#"), text_color=momentum_score > 0 ? color.green : momentum_score < 0 ? color.red : color.gray)
    table.cell(dashboard, 2, 4, momentum_score > 5 ? "STRONG" : momentum_score < -5 ? "WEAK" : "NEUTRAL", text_color=momentum_score > 5 ? color.green : momentum_score < -5 ? color.red : color.gray)
    
    table.cell(dashboard, 0, 5, "RSI Fixed", text_color=color.white)
    table.cell(dashboard, 1, 5, str.tostring(rsi, "#.#"), text_color=rsi > 60 ? color.green : rsi < 40 ? color.red : color.gray)
    table.cell(dashboard, 2, 5, rsi_bullish ? "BULL" : rsi_bearish ? "BEAR" : "NEUTRAL", text_color=rsi_bullish ? color.green : rsi_bearish ? color.red : color.gray)
    
    table.cell(dashboard, 0, 6, "Safety", text_color=color.white)
    table.cell(dashboard, 1, 6, safety_stop ? "STOP" : "ACTIVE", text_color=safety_stop ? color.red : color.green)
    table.cell(dashboard, 2, 6, safety_stop ? "DANGER" : "SECURE", text_color=safety_stop ? color.red : color.green)
    
    table.cell(dashboard, 0, 7, "Session", text_color=color.white)
    table.cell(dashboard, 1, 7, london_ny_overlap ? "PRIME" : active_session ? "ACTIVE" : "CLOSED", text_color=london_ny_overlap ? color.green : active_session ? color.yellow : color.gray)
    table.cell(dashboard, 2, 7, "Min: " + str.tostring(minSignalStrength, "#"), text_color=color.yellow)
